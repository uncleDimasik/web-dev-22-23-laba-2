@use "sass:math";
@import "vars";

@mixin sm-max {
  @media (max-width: #{numbToPx($screen-sm)}) {
    @content;
  }
}

@mixin md-max {
  @media (max-width: #{numbToPx($screen-md)}) {
    @content;
  }
}

@mixin lg-max {
  @media (max-width: #{numbToPx($screen-lg)}) {
    @content;
  }
}

@mixin xl-max {
  @media (max-width: #{numbToPx($screen-xl)}) {
    @content;
  }
}
//-------------------min----------------
@mixin sm-min {
  @media (min-width: #{numbToPx($screen-sm+1)}) {
    @content;
  }
}

@mixin md-min {
  @media (min-width: #{numbToPx($screen-md+1)}) {
    @content;
  }
}

@mixin lg-min {
  @media (min-width: #{numbToPx($screen-lg+1)}) {
    @content;
  }
}

@mixin xl-min {
  @media (min-width: #{numbToPx($screen-xl+1)}) {
    @content;
  }
}


@mixin adaptiveValue($property, $startSize, $minSize, $widthFrom: $container-width, $widthTo: $minWidth, $keepSize: 0) {
  @if ($startSize==0) {
    $startSize: 0.000001;
  }
  @if ($minSize==0) {
    $minSize: 0.000001;
  }

  // Для calc();
  $addSize: math.div($startSize - $minSize, 16);

  @if ($widthFrom == $container-width and $max-container == 0) {
    $widthFrom: $maxWidth;
  }

  // Брейк-поинты в EM
  $widthFromMedia: em($widthFrom);
  $widthToMedia: em($widthTo);

  // Формула плавающего значения
  // Источник: https://css-tricks.com/linearly-scale-font-size-with-css-clamp-based-on-the-viewport/
  $slope: math.div(($startSize - $minSize), ($widthFrom - $widthTo));
  $yIntersection: -$widthTo * $slope + $minSize;
  @if ($yIntersection==0) {
    $yIntersection: 0.000001;
  }
  $flyValue: #{rem($yIntersection)}" + " #{$slope * 100}vw;

  // Получение значения свойства
  $propertyValue: #{"clamp(" rem($minSize) "," $flyValue "," rem($startSize) ")"};
  // Если отрицательные значения
  @if ($minSize > $startSize) {
    $propertyValue: #{"clamp(" rem($startSize) "," $flyValue "," rem($minSize) ")"};
  }

  // Если поддерживается clamp();
  @supports (#{$property}: $propertyValue) {
    #{$property}: $propertyValue;
  }
  // Если не поддерживается clamp();
  @supports not (#{$property}: $propertyValue) {
    #{$property}: calc(#{rem($minSize)} + #{$addSize} * (100vw - #{rem($widthTo)}) / #{math.div($widthFrom, 16) - math.div($widthTo, 16)});
  }

  // Устанавливаем значения по умолчанию
  @if $widthFrom != $container-width and $widthFrom != $maxWidth and $keepSize != 1 and $keepSize != 2 {
    @media (min-width: $widthFromMedia) {
      #{$property}: inherit;
    }
  }
  @if $widthTo != $minWidth and $keepSize != 1 and $keepSize != 3 {
    @media (max-width: $widthToMedia) {
      #{$property}: inherit;
    }
  }
}


